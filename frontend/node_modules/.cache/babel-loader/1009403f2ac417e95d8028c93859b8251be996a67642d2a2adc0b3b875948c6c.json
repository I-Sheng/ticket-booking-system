{"ast":null,"code":"var _jsxFileName = \"/Users/kai/side-project/ticket-booking-system/frontend/src/components/myTicket.tsx\",\n  _s = $RefreshSig$();\n// components/MyTicket.tsx\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTicket = () => {\n  _s();\n  const {\n    isLoggedIn,\n    role\n  } = useAuth();\n  // const [tickets, setTickets] = useState<Ticket[]>([])\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const tickets = [{\n    id: 1,\n    event_name: '周杰倫',\n    event_date: '2024-12-25',\n    ticket_type: 'VIP',\n    price: 100\n  }, {\n    id: 2,\n    event_name: '音乐会',\n    event_date: '2025-01-10',\n    ticket_type: '普通票',\n    price: 50\n  }, {\n    id: 3,\n    event_name: '电影放映',\n    event_date: '2024-12-30',\n    ticket_type: '学生票',\n    price: 30\n  }];\n  // useEffect(() => {\n  //   if (isLoggedIn) {\n  //     // 假设我们已经将 `jwt_token` 存储在 `localStorage` 中，并将它传递给请求\n  //     const token = localStorage.getItem('jwt_token')\n  //     if (token) {\n  //       fetchTickets(token)\n  //     } else {\n  //       setError('未找到用户登录信息，请重新登录')\n  //     }\n  //   }\n  // }, [isLoggedIn])\n  //\n  // // 获取已购票数据\n  // const fetchTickets = async (token: string) => {\n  //   try {\n  //     const response = await fetch('/api/tickets', {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         Authorization: `Bearer ${token}`, // 将 JWT token 添加到请求头\n  //       },\n  //     })\n  //\n  //     if (!response.ok) {\n  //       throw new Error('无法获取票务数据')\n  //     }\n  //\n  //     const data = await response.json()\n  //     setTickets(data)\n  //   } catch (err: any) {\n  //     setError(err.message || '发生错误')\n  //   } finally {\n  //     setLoading(false)\n  //   }\n  // }\n\n  // if (loading) {\n  //   return <div>正在加载票务信息...</div>\n  // }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6211\\u7684\\u95E8\\u7968\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), tickets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u60A8\\u8FD8\\u6CA1\\u6709\\u8D2D\\u4E70\\u4EFB\\u4F55\\u95E8\\u7968\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ticket.event_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u65F6\\u95F4\\uFF1A\", ticket.event_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u7968\\u79CD\\uFF1A\", ticket.ticket_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u4EF7\\u683C\\uFF1A\", ticket.price, \"\\u5143\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, ticket.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTicket, \"oWLzSWka/M8EYDG+xKDPhLW2yYk=\", false, function () {\n  return [useAuth];\n});\n_c = MyTicket;\nexport default MyTicket;\nvar _c;\n$RefreshReg$(_c, \"MyTicket\");","map":{"version":3,"names":["React","useState","useAuth","jsxDEV","_jsxDEV","MyTicket","_s","isLoggedIn","role","loading","setLoading","error","setError","tickets","id","event_name","event_date","ticket_type","price","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ticket","_c","$RefreshReg$"],"sources":["/Users/kai/side-project/ticket-booking-system/frontend/src/components/myTicket.tsx"],"sourcesContent":["// components/MyTicket.tsx\nimport React, { useEffect, useState } from 'react'\nimport { useAuth } from '../context/AuthContext'\n\ninterface Ticket {\n  id: number\n  event_name: string\n  event_date: string\n  ticket_type: string\n  price: number\n}\n\nconst MyTicket: React.FC = () => {\n  const { isLoggedIn, role } = useAuth()\n  // const [tickets, setTickets] = useState<Ticket[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const tickets: Ticket[] = [\n    {\n      id: 1,\n      event_name: '周杰倫',\n      event_date: '2024-12-25',\n      ticket_type: 'VIP',\n      price: 100,\n    },\n    {\n      id: 2,\n      event_name: '音乐会',\n      event_date: '2025-01-10',\n      ticket_type: '普通票',\n      price: 50,\n    },\n    {\n      id: 3,\n      event_name: '电影放映',\n      event_date: '2024-12-30',\n      ticket_type: '学生票',\n      price: 30,\n    },\n  ]\n  // useEffect(() => {\n  //   if (isLoggedIn) {\n  //     // 假设我们已经将 `jwt_token` 存储在 `localStorage` 中，并将它传递给请求\n  //     const token = localStorage.getItem('jwt_token')\n  //     if (token) {\n  //       fetchTickets(token)\n  //     } else {\n  //       setError('未找到用户登录信息，请重新登录')\n  //     }\n  //   }\n  // }, [isLoggedIn])\n  //\n  // // 获取已购票数据\n  // const fetchTickets = async (token: string) => {\n  //   try {\n  //     const response = await fetch('/api/tickets', {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         Authorization: `Bearer ${token}`, // 将 JWT token 添加到请求头\n  //       },\n  //     })\n  //\n  //     if (!response.ok) {\n  //       throw new Error('无法获取票务数据')\n  //     }\n  //\n  //     const data = await response.json()\n  //     setTickets(data)\n  //   } catch (err: any) {\n  //     setError(err.message || '发生错误')\n  //   } finally {\n  //     setLoading(false)\n  //   }\n  // }\n\n  // if (loading) {\n  //   return <div>正在加载票务信息...</div>\n  // }\n\n  if (error) {\n    return <div>{error}</div>\n  }\n\n  return (\n    <div>\n      <h2>我的门票</h2>\n      {tickets.length === 0 ? (\n        <p>您还没有购买任何门票。</p>\n      ) : (\n        <ul>\n          {tickets.map((ticket) => (\n            <li key={ticket.id}>\n              <h3>{ticket.event_name}</h3>\n              <p>时间：{ticket.event_date}</p>\n              <p>票种：{ticket.ticket_type}</p>\n              <p>价格：{ticket.price}元</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default MyTicket\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}