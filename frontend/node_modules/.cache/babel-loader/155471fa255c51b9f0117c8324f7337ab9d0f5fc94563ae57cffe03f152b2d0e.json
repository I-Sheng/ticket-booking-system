{"ast":null,"code":"var _jsxFileName = \"/Users/kai/side-project/ticket-booking-system/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/AuthContext.tsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [name, setName] = useState(null);\n  const [role, setRole] = useState(null); // 'user' 或 'host'\n\n  useEffect(() => {\n    // Load the token and name from localStorage when the component mounts\n    const token = localStorage.getItem('jwt_token');\n    const savedName = localStorage.getItem('name');\n    const savedRole = localStorage.getItem('role'); // 强制转换为具体的 role 类型\n\n    if (token) {\n      setIsLoggedIn(true);\n      setName(savedName);\n      setRole(savedRole);\n    }\n  }, []);\n\n  // 登录方法\n  const login = (name, token, role) => {\n    setIsLoggedIn(true);\n    setName(name);\n    localStorage.setItem('jwt_token', token); // 保存 JWT token 到 localStorage\n    localStorage.setItem('name', name); // 保存 name 到 localStorage\n    localStorage.setItem('role', role); // 存储角色信息\n  };\n\n  // 登出方法\n  const logout = () => {\n    localStorage.removeItem('jwt_token');\n    localStorage.removeItem('name');\n    localStorage.removeItem('role');\n    setIsLoggedIn(false);\n    setIsLoggedIn(false);\n    setName(null);\n    setRole(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      name,\n      role,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ScVqhsM/Vj3LSRB7+KNJZujUf8g=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","name","setName","role","setRole","token","localStorage","getItem","savedName","savedRole","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/kai/side-project/ticket-booking-system/frontend/src/context/AuthContext.tsx"],"sourcesContent":["// context/AuthContext.tsx\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from 'react'\n\ninterface AuthContextType {\n  isLoggedIn: boolean\n  name: string | null\n  role: 'user' | 'host' | null\n  login: (name: string, token: string, role: 'user' | 'host') => void\n  logout: () => void\n}\n\ninterface AuthProviderProps {\n  children: ReactNode\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [name, setName] = useState<string | null>(null)\n  const [role, setRole] = useState<'user' | 'host' | null>(null) // 'user' 或 'host'\n\n  useEffect(() => {\n    // Load the token and name from localStorage when the component mounts\n    const token = localStorage.getItem('jwt_token')\n    const savedName = localStorage.getItem('name')\n    const savedRole = localStorage.getItem('role') as 'user' | 'host' | null // 强制转换为具体的 role 类型\n\n    if (token) {\n      setIsLoggedIn(true)\n      setName(savedName)\n      setRole(savedRole)\n    }\n  }, [])\n\n  // 登录方法\n  const login = (name: string, token: string, role: 'user' | 'host') => {\n    setIsLoggedIn(true)\n    setName(name)\n    localStorage.setItem('jwt_token', token) // 保存 JWT token 到 localStorage\n    localStorage.setItem('name', name) // 保存 name 到 localStorage\n    localStorage.setItem('role', role) // 存储角色信息\n  }\n\n  // 登出方法\n  const logout = () => {\n    localStorage.removeItem('jwt_token')\n    localStorage.removeItem('name')\n    localStorage.removeItem('role')\n    setIsLoggedIn(false)\n    setIsLoggedIn(false)\n    setName(null)\n    setRole(null)\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, name, role, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,QAEJ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAcd,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAyB,IAAI,CAAC,EAAC;;EAE/DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,MAAME,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAA2B,EAAC;;IAEzE,IAAIF,KAAK,EAAE;MACTL,aAAa,CAAC,IAAI,CAAC;MACnBE,OAAO,CAACM,SAAS,CAAC;MAClBJ,OAAO,CAACK,SAAS,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,KAAK,GAAGA,CAACT,IAAY,EAAEI,KAAa,EAAEF,IAAqB,KAAK;IACpEH,aAAa,CAAC,IAAI,CAAC;IACnBE,OAAO,CAACD,IAAI,CAAC;IACbK,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEN,KAAK,CAAC,EAAC;IACzCC,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEV,IAAI,CAAC,EAAC;IACnCK,YAAY,CAACK,OAAO,CAAC,MAAM,EAAER,IAAI,CAAC,EAAC;EACrC,CAAC;;EAED;EACA,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBN,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;IACpCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/Bb,aAAa,CAAC,KAAK,CAAC;IACpBA,aAAa,CAAC,KAAK,CAAC;IACpBE,OAAO,CAAC,IAAI,CAAC;IACbE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,UAAU;MAAEE,IAAI;MAAEE,IAAI;MAAEO,KAAK;MAAEE;IAAO,CAAE;IAAAf,QAAA,EACpEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAArB,EAAA,CA3CYF,YAAyC;AAAAwB,EAAA,GAAzCxB,YAAyC;AA6CtD,OAAO,MAAMyB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGlC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC6B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAAAD,GAAA,CANYD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}