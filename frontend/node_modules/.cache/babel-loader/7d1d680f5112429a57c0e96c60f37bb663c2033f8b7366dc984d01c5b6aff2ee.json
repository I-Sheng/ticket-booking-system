{"ast":null,"code":"var _jsxFileName = \"/Users/kai/side-project/ticket-booking-system/frontend/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/AuthContext'; // 假设你已经创建了 AuthContext\n\n// checkLoginStatus 用于从 localStorage 获取并设置登录状态\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkLoginStatus = () => {\n  const jwtToken = localStorage.getItem('jwt_token');\n  const name = localStorage.getItem('name');\n  return {\n    jwtToken,\n    name\n  };\n};\nconst Root = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [name, setName] = useState(null);\n  useEffect(() => {\n    const {\n      jwtToken,\n      name\n    } = checkLoginStatus();\n    if (jwtToken) {\n      setIsLoggedIn(true);\n      setName(name);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Root, \"K91Y/8gvSYc9KOejzeFgwokeUIo=\");\n_c = Root;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","App","reportWebVitals","AuthProvider","jsxDEV","_jsxDEV","checkLoginStatus","jwtToken","localStorage","getItem","name","Root","_s","isLoggedIn","setIsLoggedIn","setName","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/Users/kai/side-project/ticket-booking-system/frontend/src/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { AuthProvider } from './context/AuthContext' // 假设你已经创建了 AuthContext\n\n// checkLoginStatus 用于从 localStorage 获取并设置登录状态\nconst checkLoginStatus = () => {\n  const jwtToken = localStorage.getItem('jwt_token')\n  const name = localStorage.getItem('name')\n\n  return { jwtToken, name }\n}\n\nconst Root = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [name, setName] = useState<string | null>(null)\n\n  useEffect(() => {\n    const { jwtToken, name } = checkLoginStatus()\n    if (jwtToken) {\n      setIsLoggedIn(true)\n      setName(name)\n    } else {\n      setIsLoggedIn(false)\n    }\n  }, [])\n\n  return (\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  )\n}\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)\nroot.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,YAAY,QAAQ,uBAAuB,EAAC;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAClD,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAEzC,OAAO;IAAEF,QAAQ;IAAEG;EAAK,CAAC;AAC3B,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,IAAI,EAAEK,OAAO,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,MAAM;MAAES,QAAQ;MAAEG;IAAK,CAAC,GAAGJ,gBAAgB,CAAC,CAAC;IAC7C,IAAIC,QAAQ,EAAE;MACZO,aAAa,CAAC,IAAI,CAAC;MACnBC,OAAO,CAACL,IAAI,CAAC;IACf,CAAC,MAAM;MACLI,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACF,YAAY;IAAAa,QAAA,eACXX,OAAA,CAACJ,GAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB,CAAC;AAAAR,EAAA,CAnBKD,IAAI;AAAAU,EAAA,GAAJV,IAAI;AAoBV,MAAMW,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAgB,CAAC;AAChFH,IAAI,CAACI,MAAM,cACTrB,OAAA,CAACR,KAAK,CAAC8B,UAAU;EAAAX,QAAA,eACfX,OAAA,CAACM,IAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACQ,CACpB,CAAC;;AAED;AACA;AACA;AACAlB,eAAe,CAAC,CAAC;AAAA,IAAAmB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}