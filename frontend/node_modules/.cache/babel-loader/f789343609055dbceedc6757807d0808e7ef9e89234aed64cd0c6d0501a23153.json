{"ast":null,"code":"var _jsxFileName = \"/Users/kai/side-project/ticket-booking-system/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/AuthContext.tsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [name, setName] = useState(null);\n  useEffect(() => {\n    // Load the token and name from localStorage when the component mounts\n    const token = localStorage.getItem('jwt_token');\n    const savedName = localStorage.getItem('name');\n    if (token) {\n      setIsLoggedIn(true);\n      setName(savedName);\n    }\n  }, []);\n\n  // 登录方法\n  const login = (name, token) => {\n    setIsLoggedIn(true);\n    setName(name);\n    localStorage.setItem('jwt_token', token); // 保存 JWT token 到 localStorage\n    localStorage.setItem('name', name); // 保存 name 到 localStorage\n  };\n\n  // 登出方法\n  const logout = () => {\n    localStorage.removeItem('jwt_token');\n    localStorage.removeItem('name');\n    setIsLoggedIn(false);\n    setName(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      name,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"K91Y/8gvSYc9KOejzeFgwokeUIo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","name","setName","token","localStorage","getItem","savedName","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/kai/side-project/ticket-booking-system/frontend/src/context/AuthContext.tsx"],"sourcesContent":["// context/AuthContext.tsx\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react'\n\ninterface AuthContextType {\n  isLoggedIn: boolean\n  name: string | null\n  login: (name: string, token: string) => void\n  logout: () => void\n}\n\ninterface AuthProviderProps {\n  children: ReactNode\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [name, setName] = useState<string | null>(null)\n\n  useEffect(() => {\n    // Load the token and name from localStorage when the component mounts\n    const token = localStorage.getItem('jwt_token')\n    const savedName = localStorage.getItem('name')\n\n    if (token) {\n      setIsLoggedIn(true)\n      setName(savedName)\n    }\n  }, [])\n\n  // 登录方法\n  const login = (name: string, token: string) => {\n    setIsLoggedIn(true)\n    setName(name)\n    localStorage.setItem('jwt_token', token)  // 保存 JWT token 到 localStorage\n    localStorage.setItem('name', name)       // 保存 name 到 localStorage\n  }\n\n  // 登出方法\n  const logout = () => {\n    localStorage.removeItem('jwt_token')\n    localStorage.removeItem('name')\n    setIsLoggedIn(false)\n    setName(null)\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, name, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAaxF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE9C,IAAIF,KAAK,EAAE;MACTH,aAAa,CAAC,IAAI,CAAC;MACnBE,OAAO,CAACI,SAAS,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,KAAK,GAAGA,CAACN,IAAY,EAAEE,KAAa,KAAK;IAC7CH,aAAa,CAAC,IAAI,CAAC;IACnBE,OAAO,CAACD,IAAI,CAAC;IACbG,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEL,KAAK,CAAC,EAAE;IAC1CC,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEP,IAAI,CAAC,EAAO;EAC3C,CAAC;;EAED;EACA,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACnBL,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;IACpCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IAC/BV,aAAa,CAAC,KAAK,CAAC;IACpBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,UAAU;MAAEE,IAAI;MAAEM,KAAK;MAAEE;IAAO,CAAE;IAAAZ,QAAA,EAC9DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAAlB,EAAA,CApCYF,YAAyC;AAAAqB,EAAA,GAAzCrB,YAAyC;AAsCtD,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG/B,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAAAD,GAAA,CANYD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}